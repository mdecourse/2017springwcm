<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2017Spring 網際內容管理 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/course.atom.xml" rel="self"></link><id>./</id><updated>2017-02-19T11:00:00+08:00</updated><entry><title>網際 Python3 程式環境</title><link href="./web-based-python3.html" rel="alternate"></link><published>2017-02-19T11:00:00+08:00</published><updated>2017-02-19T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-02-19:./web-based-python3.html</id><summary type="html">&lt;p&gt;網際內容管理課程利用 &lt;a href="https://brython.info/"&gt;Brython&lt;/a&gt; 建立一個能夠直接在瀏覽器中執行的 Python3 程式環境, 讓使用者進行各種與機械產品開發相關的設計運算與動靜態模擬.&lt;/p&gt;


&lt;!-- 導入 FileSaver 與 filereader --&gt;

&lt;script type="text/javascript" src="./../ace/FileSaver.min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../ace/filereader.js"&gt;&lt;/script&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;!-- &lt;script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt; --&gt;

&lt;!-- 為了讓 import script1 可以正確運行, 停留在 Brython 3.2.9 版 --&gt;

&lt;script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/3.2.9/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 假如需要用圖型表示數字, 則利用 canvas 繪圖 --&gt;

&lt;!-- &lt;canvas id="plotarea" width="600" height="400"&gt;&lt;/canvas&gt; --&gt;

&lt;div id="container1"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document, html
container1 = document['container1']
&lt;/script&gt;

&lt;h3&gt;利用伺服器執行 Python3 程式&lt;/h3&gt;
&lt;p&gt;Jupyterhub: &lt;a href="https://8888.kmol.info:9443"&gt;https://8888.kmol.info:9443&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;利用以下的編輯器執行 Python3 程式&lt;/h3&gt;
&lt;p&gt;在 Firefox 中, 以 Preferences - General - Downloads 選擇"Always ask me where to save files"&lt;/p&gt;
&lt;p&gt;在 Chrome 中, 以 Settings - Advanced - Downloads 選擇 Ask where to save each file before downloading&lt;/p&gt;
&lt;script src="./../ace/ace.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;

&lt;script src="./../ace/ext-language_tools.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;

&lt;script src="./../ace/mode-python3.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;

&lt;script src="./../ace/snippets/python.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;

&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;

&lt;script type="text/javascript"&gt;
function doSave(){
    var blob = new Blob([localStorage["py_src"]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById('filename').value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;

&lt;script type="text/python3" id="script1"&gt;
import sys
import time
import traceback
import javascript

from browser import document as doc, window, alert

has_ace = True
try:
    editor = window.ace.edit("editor")
    session = editor.getSession()
    session.setMode("ace/mode/python")

    editor.setOptions({
     'enableLiveAutocompletion': True,
     'enableSnippets': True,
     'highlightActiveLine': False,
     'highlightSelectedWord': True
    })
except:
    from browser import html
    editor = html.TEXTAREA(rows=20, cols=70)
    doc["editor"] &lt;= editor
    def get_value(): return editor.value
    def set_value(x):editor.value = x
    editor.getValue = get_value
    editor.setValue = set_value
    has_ace = False

if hasattr(window, 'localStorage'):
    from browser.local_storage import storage
else:
    storage = None

def reset_src():
    if storage is not None and "py_src" in storage:
        editor.setValue(storage["py_src"])
    else:
        editor.setValue('for i in range(10):\n\tprint(i)')
    editor.scrollToRow(0)
    editor.gotoLine(0)

def reset_src_area():
    if storage and "py_src" in storage:
        editor.value = storage["py_src"]
    else:
        editor.value = 'for i in range(10):\n\tprint(i)'

class cOutput:

    def __init__(self,target):
        self.target = doc[target]
    def write(self,data):
        self.target.value += str(data)


#if "console" in doc:
sys.stdout = cOutput("console")
sys.stderr = cOutput("console")

def to_str(xx):
    return str(xx)

info = sys.implementation.version
doc['version'].text = 'Brython %s.%s.%s' % (info.major, info.minor, info.micro)

output = ''

def show_console(ev):
    doc["console"].value = output
    doc["console"].cols = 60
    doc["console"].rows = 10

# load a Python script
def load_script(evt):
    _name = evt.target.value + '?foo=%s' % time.time()
    editor.setValue(open(_name).read())

# run a script, in global namespace if in_globals is True
def run(*args):
    global output
    doc["console"].value = ''
    src = editor.getValue()
    if storage is not None:
       storage["py_src"] = src

    t0 = time.perf_counter()
    try:
        #ns = {'__name__':'__main__'}
        ns = {'__name__':'editor'}
        exec(src, ns)
        state = 1
    except Exception as exc:
        traceback.print_exc(file=sys.stderr)
        state = 0
    output = doc["console"].value

    print('&lt;completed in %6.2f ms&gt;' % ((time.perf_counter() - t0) * 1000.0))
    return state

if has_ace:
    reset_src()
else:
    reset_src_area()

def clear_console(ev):
    doc["console"].value = ""

doc['run'].bind('click',run)
doc['show_console'].bind('click',show_console)
doc['clear_console'].bind('click',clear_console)
&lt;/script&gt;

&lt;div id="version"&gt;&lt;/div&gt;

&lt;div id="editor" style="width:600px;height:300px;"&gt;&lt;/div&gt;

&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;

&lt;form&gt;
    &lt;label&gt;Filename: &lt;input type="text" id="filename" placeholder="input file name"/&gt;.py&lt;/label&gt;
    &lt;input type="submit" value="Save" onclick="doSave();"/&gt;
&lt;/form&gt;

&lt;p&gt;&lt;button id="run"&gt;Run&lt;/button&gt;
&lt;button id="show_console"&gt;Output&lt;/button&gt;
&lt;button id="clear_console"&gt;清除&lt;/button&gt;
&lt;div style="width:100%;height:100%;"&gt;
&lt;textarea id="console" autocomplete="off"&gt;&lt;/textarea&gt;
&lt;/div&gt;
&lt;div id="common"&gt;&lt;/div&gt;&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex1(ev):
    script1.editor.setValue('''#ex1 簡單的 for 迴圈範例
    for i in range(10):
        print(i)
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex1'].bind('click',ex1)
&lt;/script&gt;

&lt;p&gt;&lt;a id="ex1"&gt;ex1&lt;/a&gt;-for 迴圈&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex2(ev):
    script1.editor.setValue('''#溫度轉換程式
from browser import document as doc

# 因為此函式與滑鼠互動, 需要 event 當作輸入
def convTemp():
    mystring = ""
    cdegree = input("請輸入攝氏溫度:")
    fdegree = float(cdegree)*9/5 + 32
    output_string = "攝氏 " + str(cdegree) + "度=華氏 " + str(fdegree) + "度" 
    # 利用 print() 將轉換結果送到 console 區
    print(output_string)

#直接呼叫 convTemp() 執行
convTemp()
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex2'].bind('click',ex2)
&lt;/script&gt;

&lt;p&gt;&lt;a id="ex2"&gt;ex2&lt;/a&gt;-溫度換算&lt;/p&gt;
&lt;script type="text/python3"&gt;
from browser import document
import script1

def get_file(e):
    data = open("./../python_ex/for1.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)

document["get"].bind("click", get_file)
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def get_temp1(e):
    data = open("./../python_ex/temp1.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)

document["get_temp1"].bind("click", get_temp1)
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def get_ver_and_kw(e):
    data = open("./../python_ex/ver_and_kw.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)

document["get_ver_and_kw"].bind("click", get_ver_and_kw)
&lt;/script&gt;

&lt;p&gt;&lt;button id="get"&gt;for1.py&lt;/button&gt;&lt;button id="get_temp1"&gt;temp1.py&lt;/button&gt;&lt;button id="get_ver_and_kw"&gt;ver_and_kw.py&lt;/button&gt;&lt;/p&gt;</summary><category term="brython"></category><category term="w1"></category></entry><entry><title>2017Spring 機械設計工程系網際內容管理</title><link href="./2017spring-mde-wcm.html" rel="alternate"></link><published>2017-01-08T11:00:00+08:00</published><updated>2017-01-08T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-01-08:./2017spring-mde-wcm.html</id><summary type="html">&lt;p&gt;2017 Spring 網際內容管理&lt;/p&gt;


&lt;h2&gt;歷年網際內容管理課程&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://chiamingyen.github.io/kmolab/blog/tag/wang-ji-nei-rong-guan-li.html"&gt;2016 Spring 網際內容管理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wordpress-2015course.rhcloud.com/?cat=2"&gt;2015 Spring 網際內容管理&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;網際內容管理課程評分標準:&lt;/h2&gt;
&lt;p&gt;(一) 各分組學員是否按步就班利用網際簡報、網誌與操作影片呈現細節內容 (50%) - 各組學員根據實際完成內容自評成績後 * 老師認可百分比&lt;/p&gt;
&lt;p&gt;(二) 各分組學員在協同過程是否互助砥礪完成既定工作任務 (分組成員互評) (20%) - 各組學員根據實際內容舉證互評成績平均, 參考系統: &lt;a href="https://pygroup-ag100.rhcloud.com"&gt;https://pygroup-ag100.rhcloud.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(三) 上課出席與表現 (各學員根據實際內容舉證自評成績 * 老師認可百分比) (30%)&lt;/p&gt;
&lt;h2&gt;網際內容管理課程規劃&lt;/h2&gt;
&lt;p&gt;2017 WCM 機械設計工程系網際內容管理 (五) 13:20-16:10 各週上課日期:&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color: #ffff00"&gt;w1&lt;/span&gt;-2/24 - 請每人準備一個隨身碟, &lt;span style="background-color: #55ff55"&gt;&lt;a href="http://service.mde.tw/public/tiny2017_1GB.7z"&gt;下載&lt;/a&gt;&lt;/span&gt;可攜程式系統 (1GB). 複習如何在單機環境與網際環境中執行基本的 Python3 程式.&lt;/p&gt;
&lt;p&gt;w2-3/3 - CMSimfly 網際內容管理程式開發&lt;/p&gt;
&lt;p&gt;w3-3/10 - CMSimfly 網際內容管理程式開發&lt;/p&gt;
&lt;p&gt;w4-3/17 - CMSimfly 網際內容管理程式開發&lt;/p&gt;
&lt;p&gt;w5-3/24 - CMSimfly 網際內容管理程式開發&lt;/p&gt;
&lt;p&gt;w6-3/31(放假)&lt;/p&gt;
&lt;p&gt;w7-4/7 - 分組期中專案執行&lt;/p&gt;
&lt;p&gt;w8-4/14 - 期中簡報與自評&lt;/p&gt;
&lt;p&gt;w9-4/21 - Fossil SCM 配置與應用&lt;/p&gt;
&lt;p&gt;w10-4/28 - Fossil SCM 配置與應用&lt;/p&gt;
&lt;p&gt;w11-5/5 - Fossil SCM 配置與應用&lt;/p&gt;
&lt;p&gt;w12-5/12 - Fossil SCM 配置與應用&lt;/p&gt;
&lt;p&gt;w13-5/19 - 網際伺服器環境管理&lt;/p&gt;
&lt;p&gt;w14-5/26 - 網際伺服器環境管理&lt;/p&gt;
&lt;p&gt;w15-6/2 - 網際伺服器環境管理&lt;/p&gt;
&lt;p&gt;w16-6/9 - 分組期末專案執行&lt;/p&gt;
&lt;p&gt;w17-6/16 - 分組期末專案執行&lt;/p&gt;
&lt;p&gt;w18-6/23 - 期末簡報與自評&lt;/p&gt;</summary><category term="syllabus"></category><category term="w1"></category></entry></feed>